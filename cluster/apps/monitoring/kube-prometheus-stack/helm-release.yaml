---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 16.12.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-charts
        namespace: flux-system
      interval: 5m
  values:
    kubeEtcd:
      enabled: false
    alertmanager:
      image:
        repository: quay.io/prometheus/alertmanager
        tag: v0.22.0
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        hosts:
        - "alert-manager.${SECRET_DOMAIN}"
        tls:
        - hosts:
          - "alert-manager.${SECRET_DOMAIN}"
      config:
        global:
          slack_api_url: "${SECRET_ALERT_MANAGER_DISCORD_WEBHOOK}"
          resolve_timeout: 5m
        receivers:
        - name: 'null'
        - name: 'discord'
          slack_configs:
          - channel: '#prometheus'
            icon_url: https://avatars3.githubusercontent.com/u/3380462
            username: 'Prometheus'
            send_resolved: true
        route:
          group_by: ['alertname', 'job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: 'discord'
          routes:
          - receiver: 'null'
            match:
              alertname: Watchdog
          - receiver: 'discord'
    grafana:
      enabled: true
      image:
        repository: grafana/grafana
        tag: 8.0.3
      admin:
        existingSecret: grafana-secrets
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        hosts:
        - "grafana.${SECRET_DOMAIN}"
        tls:
        - hosts:
          - "grafana.${SECRET_DOMAIN}"
    prometheus:
      image:
        repository: quay.io/prometheus/prometheus
        tag: v2.27.1
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        hosts:
        - "prometheus.${SECRET_DOMAIN}"
        tls:
        - hosts:
          - "prometheus.${SECRET_DOMAIN}"
      prometheusSpec:
        retention: 14d
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 5Gi